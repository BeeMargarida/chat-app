{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport { HOST_URL } from \"../../settings\";\nexport var authStart = function authStart() {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport var authSuccess = function authSuccess(username, token) {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    username: username\n  };\n};\nexport var authFail = function authFail(error) {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport var logout = function logout() {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"username\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport var checkAuthTimeout = function checkAuthTimeout(expirationTime) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport var authLogin = function authLogin(username, password) {\n  return function (dispatch) {\n    dispatch(authStart());\n    axios.post(\"\".concat(HOST_URL, \"/rest-auth/login/\"), {\n      username: username,\n      password: password\n    }).then(function (res) {\n      var token = res.data.key;\n      var expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"username\", username);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      dispatch(authSuccess(username, token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(function (err) {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport var authSignup = function authSignup(username, email, password1, password2) {\n  return function (dispatch) {\n    dispatch(authStart());\n    axios.post(\"\".concat(HOST_URL, \"/rest-auth/registration/\"), {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    }).then(function (res) {\n      var token = res.data.key;\n      var expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"username\", username);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      dispatch(authSuccess(username, token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(function (err) {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport var authCheckState = function authCheckState() {\n  return function (dispatch) {\n    var token = localStorage.getItem(\"token\");\n    var username = localStorage.getItem(\"username\");\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      var expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(username, token));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/home/margarida/Documents/chat-app/django-chat/frontend/src/store/actions/auth.js"],"names":["axios","actionTypes","HOST_URL","authStart","type","AUTH_START","authSuccess","username","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","password","post","then","res","data","key","expirationDate","Date","getTime","setItem","catch","err","authSignup","email","password1","password2","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport { HOST_URL } from \"../../settings\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (username, token) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    username: username\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"username\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(`${HOST_URL}/rest-auth/login/`, {\n        username: username,\n        password: password\n      })\n      .then(res => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(username, token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(`${HOST_URL}/rest-auth/registration/`, {\n        username: username,\n        email: email,\n        password1: password1,\n        password2: password2\n      })\n      .then(res => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(username, token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    const username = localStorage.getItem(\"username\");\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(username, token));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}